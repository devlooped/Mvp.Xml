<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.312" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>False</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.312\Xml\FxCopReport.Xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <PermitAnalysis>True</PermitAnalysis>
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>100</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>10</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
  <VersionAware>False</VersionAware>
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>C:\Documents and Settings\xor\My Documents\Visual Studio Projects\sdf.XPath\sdf.XPath\bin\Debug\</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="C:\Documents and Settings\xor\My Documents\Visual Studio Projects\sdf.XPath\sdf.XPath\bin\Release\sdf.XPath.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="AvoidDuplicateAccelerators" Enabled="True" />
    <Rule Name="DoNotHardcodeLocaleSpecificStrings" Enabled="True" />
    <Rule Name="SetLocaleForDataTypes" Enabled="True" />
    <Rule Name="SpecifyCultureInfo" Enabled="True" />
    <Rule Name="SpecifyIFormatProvider" Enabled="True" />
    <Rule Name="SpecifyMessageBoxOptions" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="AvoidLanguageSpecificTypeNamesInParameters" Enabled="True" />
    <Rule Name="AvoidTypeNamesInParameters" Enabled="True" />
    <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
    <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
    <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
    <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="True" />
    <Rule Name="LongAcronymsShouldBePascalCased" Enabled="True" />
    <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
    <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
    <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="ResourceStringsShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="ShortAcronymsShouldBeUppercase" Enabled="True" />
    <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.312">
  <Targets>
   <Target Name="C:\Documents and Settings\xor\My Documents\Visual Studio Projects\sdf.XPath\sdf.XPath\bin\Release\sdf.XPath.dll">
    <Modules>
     <Module Name="sdf.xpath.dll">
      <Namespaces>
       <Namespace Name="sdf.XPath">
        <Types>
         <Type Name="ConverterAttribute">
          <Members>
           <Member Name=".ctor(System.Type)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2005-03-18 11:46:58Z">
              <Issue Name="TwoArgumentsSecondShouldBeParameterName">
               <Item>System.ArgumentException</Item>
               <Item>ArgumentException..ctor(String, String)</Item>
               <Item>Type must implement IConverter interface.</Item>
               <Item>proxyType</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ConverterFactory">
          <Members>
           <Member Name="CreateConverter(System.Type,System.Type):sdf.XPath.IConverter">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>ConverterFactory.CreateConverter(Type, Type):IConverter</Item>
               <Item>System.String.Format(System.String,System.Object)</Item>
               <Item>System.String.Format(System.IFormatProvider,System.String,System.Object[])</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="EnumConverter">
          <Members>
           <Member Name="ParseString(System.String):System.Object">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>EnumConverter.ParseString(String):Object</Item>
               <Item>System.String.Format(System.String,System.Object,System.Object)</Item>
               <Item>System.String.Format(System.IFormatProvider,System.String,System.Object[])</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="ToString(System.Object):System.String">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>EnumConverter.ToString(Object):String</Item>
               <Item>System.String.Format(System.String,System.Object,System.Object)</Item>
               <Item>System.String.Format(System.IFormatProvider,System.String,System.Object[])</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExceptionConverter">
          <Members>
           <Member Name="ToString(System.Object):System.String">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>ExceptionConverter.ToString(Object):String</Item>
               <Item>System.String.Format(System.String,System.Object,System.Object)</Item>
               <Item>System.String.Format(System.IFormatProvider,System.String,System.Object[])</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Node">
          <Members>
           <Member Name="ResolveObject():System.Void">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Status="Excluded" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>Node.ResolveObject():Void</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Excluded" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>Node.ResolveObject():Void</Item>
               <Item>System.Exception</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NodeInfo">
          <Members>
           <Member Name="Add(System.Object):System.Void">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2005-03-18 11:46:58Z">
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>sdf.XPath.ChildXmlElementAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>sdf.XPath.ConverterAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>sdf.XPath.NodePolicyAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>sdf.XPath.SkipNavigableRootAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>sdf.XPath.TransparentAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlAnyElementAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlAttributeAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlElementAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlIgnoreAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlRootAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlTextAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>attr</Item>
               <Item>System.Xml.Serialization.XmlTypeAttribute</Item>
               <Item>NodeInfo.Add(Object):Void</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NodePolicyFactory">
          <Members>
           <Member Name="CreatePolicy(System.Type):sdf.XPath.INodePolicy">
            <Messages>
             <Message Id="this" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Created="2005-03-18 11:46:58Z" FixCategory="NonBreaking">
              <Issue Name="MarkAsStatic">
               <Item>NodePolicyFactory.CreatePolicy(Type):INodePolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ObjectXPathNavigator">
          <Members>
           <Member Name=".ctor(sdf.XPath.ObjectXPathNavigator)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Excluded" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>ObjectXPathNavigator..ctor(ObjectXPathNavigator)</Item>
               <Item>

ObjectXPathNavigator..ctor(ObjectXPathNavigator)
XPathNavigator.MoveTo(XPathNavigator):Boolean</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name=".ctor(System.Object,sdf.XPath.ObjectXPathContext)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Excluded" Created="2005-03-18 11:46:58Z">
              <Issue>
               <Item>ObjectXPathNavigator..ctor(Object, ObjectXPathContext)</Item>
               <Item>

ObjectXPathNavigator..ctor(Object, ObjectXPathContext)
XPathNavigator.MoveToFirstChild():Boolean</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Name">
            <Accessors>
             <Accessor Name="get_Name():System.String">
              <Messages>
               <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-03-18 11:46:58Z">
                <Issue>
                 <Item>ObjectXPathNavigator.get_Name():String</Item>
                 <Item>System.String.Format(System.String,System.Object,System.Object)</Item>
                 <Item>System.String.Format(System.IFormatProvider,System.String,System.Object[])</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="sdf.XPath.NodePolicy">
        <Types>
         <Type Name="DictionaryNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExceptionNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="GenericNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="InnerNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ListNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MemberNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NullValueNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TextNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlNodeNodePolicy">
          <Members>
           <Member Name="GetPolicy():sdf.XPath.INodePolicy">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-03-18 11:46:58Z">
              <Issue Certainty="50">
               <Item>GetPolicy</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801">
    <Name>Avoid unused parameters</Name>
    <Description>Avoid declaring parameters that are not used in the method body. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
    <Resolution Name="MarkAsStatic">The 'this' parameter (or 'Me' in VB) of {0} is never used. Mark the method as static (or Shared in VB) or use 'this'/Me in the method body.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/AvoidUnusedParameters.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102">
    <Name>Catch non-CLSCompliant exceptions in general handlers</Name>
    <Description>Exception handlers which are truly intended to catch all exceptions should handle non-CLSCompliant exceptions if there is a possibility one can be raised. If possible, catch handlers should only catch specific exceptions or exception base types. In circumstances where a handler is required to catch all exceptions (e.g., when a try block wraps arbitrary plug-in code), the handler should also include a generic catch handler (in C#, catch{ ... }) to handle non-CLSCompliant exceptions. It is possible to raise non-CLSCompliant exceptions by modifying and recompiling IL.</Description>
    <Resolution Name="Default">{0} contains a catch(Exception) handler that is not matched with a generic catch clause (catch{{}} in C#, catch(System::Object*){{}} in mc++) for non-CLSCompliant exception. Eliminate the catch(Exception) clause by catching a specific set of Exceptions or add a generic catch (catch() in C#) that duplicates the code contained within the catch(Exception) handler.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Security/CatchNonClsCompliantExceptionsInGeneralHandlers.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="80">Error</MessageLevel>
    <File Name="SecurityRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
    <Name>Do not call overridable methods in constructors</Name>
    <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
    <Resolution Name="Default">'{0}' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Usage/DoNotCallOverridableMethodsInConstructors.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
    <File Name="UsageRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Name>Do not cast unnecessarily</Name>
    <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
    <Resolution Name="Parameter">'{0}', a parameter, is cast to type '{1}' multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/DoNotCastUnnecessarily.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Name>Do not catch Exceptions or SystemExceptions</Name>
    <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
    <Resolution Name="Default">Modify '{0}' to catch a more specific exception than '{1}' or rethrow the exception.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/DoNotCatchGeneralExceptionTypes.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">CriticalError</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
    <Name>Instantiate argument exceptions correctly</Name>
    <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
    <Resolution Name="TwoArgumentsSecondShouldBeParameterName">Calls to {0}'s constructor '{1}' should be in the order message, paramName instead of '{2}', '{3}'</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Usage/InstantiateArgumentExceptionsCorrectly.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="99">CriticalError</MessageLevel>
    <File Name="UsageRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Name>Specify IFormatProvider</Name>
    <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide an IFormatProvider. This should be replaced with a call to {2}.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Globalization/SpecifyIFormatProvider.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="GlobalizationRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Name>Use properties where appropriate</Name>
    <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
    <Resolution Name="Default">Change '{0}' to a property if appropriate.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/UsePropertiesWhereAppropriate.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
